R = 0.3;  % 设置半径R为0.3
L = 1.0;  % 设置边长L为1.0

% 定义点的坐标
Point(1) = [L, -L, 0];  % 点1坐标为 (L, -L, 0)
Point(2) = [L, L, 0];   % 点2坐标为 (L, L, 0)
Point(3) = [-L, L, 0];  % 点3坐标为 (-L, L, 0)
Point(4) = [-L, -L, 0]; % 点4坐标为 (-L, -L, 0)
Point(5) = [-L + R, -L, 0];  % 点5坐标为 (-L + R, -L, 0)
Point(6) = [-L, -L + R, 0];  % 点6坐标为 (-L, -L + R, 0)
Point(7) = [-L + cos(pi/4) * R, -L + sin(pi/4) * R, 0];  % 点7坐标为（-L + cos(pi/4) * R, -L + sin(pi/4) * R, 0）

% 定义圆弧
Circle(1) = [5, 4, 7];  % 圆弧1由连接点5、4、7组成
Circle(2) = [7, 4, 6];  % 圆弧2由连接点7、4、6组成

% 定义直线
Line(3) = [6, 3];  % 线段3是连接点6和点3
Line(4) = [3, 2];  % 线段4是连接点3和点2
Line(5) = [2, 1];  % 线段5是连接点2和点1
Line(6) = [1, 5];  % 线段6是连接点1和点5
Line(7) = [2, 7];  % 线段7是连接点2和点7

% 定义曲线环和表面
CurveLoop(1) = [4, 7, 2, 3];  % 曲线环1由线段4、7、2、3组成
PlaneSurface(1) = [1];  % 表面1由曲线环1生成

CurveLoop(2) = [7, -1, -6, -5];  % 曲线环2由线段7和负线段-1, -6, -5组成
PlaneSurface(2) = [2];  % 表面2由曲线环2生成

% 设置网格
TransfiniteLine([1, 2, 3, 4, 5, 6, 7]) = 3;  % 为所有线段设置3个节点，指定网格分割数

TransfiniteSurface(1);  % 为表面1设置渐变网格
TransfiniteSurface(2);  % 为表面2设置渐变网格

% 重新组合网格单元
RecombineSurface(1);  % 对表面1进行重新组合
RecombineSurface(2);  % 对表面2进行重新组合

% 设置网格元素的阶数和网格生成算法
Mesh.ElementOrder = 1;  % 设置网格元素阶数为1
Mesh.Algorithm = 8;     % 设置网格生成算法为8

%这段代码的主要目的是通过定义几何形状（点、线、曲线、表面）来构建一个物理域，
%然后为该几何结构生成一个网格。网格生成的细节包括有网格的分辨率、表面网格的渐变以及网格单元的重组，最后通过设置网格生成算法来优化网格划分。

